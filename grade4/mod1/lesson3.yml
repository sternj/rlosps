---
DLCS:
  - "3-5.CT.a.2 Organize information in different ways to make it more useful/relevant."
  - "3-5.CT.b.1 Define an algorithm as a sequence of instructions that can be processed by a computer."
  - "3-5.CT.d.1 Individually and collaboratively create, test, and modify a program in a graphical environment (e.g., block-based visual programming language)."
  - "3-5.CT.d.3 Use interactive debugging to detect and correct simple program errors."

content_standards:
  - name: CCSS.MATH.CONTENT.4.OA.A.1
    text: >
      Interpret a multiplication equation as a comparison, e.g., interpret 35 = 5 × 7 as a statement that 35 is 5 times as many as 7 and 7 times as many as 5.
      Represent verbal statements of multiplicative comparisons as multiplication equations.
  - name: CCSS.MATH.CONTENT.4.OA.A.2
    text: >
      Multiply or divide to solve word problems involving multiplicative comparison, e.g., by using
      drawings and equations with a symbol for the unknown number to represent the problem,
      distinguishing multiplicative comparison from additive comparison.
objectives_goals:
  - Students will solve a multiplicative comparison word problem.
  - Students will learn how to code a multiplicative comparison word problem using block-based coding.

knowledge:
  label: "Students should know..."
  items:
    - Students should be able to login to Scratch.

skills:
  label: "Students should be able to..."
  items:
    - Students should be able to use 3 reads from Ready Math to solve a word problem.
    - Students should be able to relate a sequence of events in a word problem toa sequence of events in an algorithm.

essential_questions:
  - How can we use visual models to represent multiplicative comparison word problems?
  - How do visuals help us better understand and solve multiplicative comparison word problems?

plan_for_instruction:
  teacher_role_label: "What is the teacher doing?"
  student_role_label: "What are the students doing?"
  check_for_understanding_label: "Checks for Understanding"
  horiz_sections:
    - teacher_role
    - student_role
    - check_for_understanding
  sections:
    - name: Crafting
      rows:
#        - rlm_ref:
#            role: teacher_role
#            ref: rml11
        - teacher_role: >
            Teacher: In the previous lesson, you saw an example of a word problem and
            used the three reads routine to solve the problem.
          student_role: >
            During this process, students may want to sit with their partner.
        - teacher_role: >
            Today we will teach the major controls of Scratch that students will utilize
          student_role: >
            Students can sit at the rug, spread out, or sit at their seats together,
             if they can see the board.
        - teacher_role: >
            Teacher will review the visual of the word problem modeled in the previous lesson:
          student_role: >
            After teacher introduces the tools, students will turn and talk about how
            they might want to use these tools.
          check_for_understanding: >
            Teacher observation while students are turning and talking.
        - teacher_role: >
            Ruby has 3 cats. Jane has 2 times as many cats as Ruby. How many cats does Jane have? {rlm}[12](RLM)
          student_role: >
            Students will have Scratch block-code visuals that they may use to follow
            along with the teacher’s coding on the board.
          check_for_understanding: >
            Are students able to follow along and make the same algorithms as the teacher?
        - teacher_role: >
            PowerPoint visuals are attached to show the coding of each aspect of the visual.
            This will also be posted for students to follow with their own visuals on Unified
            Classroom and printed out in the classroom. {rlm}[13](RLM)
        - teacher_role: >
            Teacher will show students:
            Add new sprite
            Events- control-wait
            Looks- Hide, show, say
            Motion- Glide, Placement
            Grouping
            Duplicating
        - teacher_role: >
            Draw your own Sprite/ Find and upload a picture from google
            Teacher will model creating Scratch with an underlying math concept.
        - teacher_role: >
            Each type of block used in Scratch today will be printed so students can use them
            to make the algorithms with their partner as the teacher codes the visual in Scratch.
        - teacher_role: >
            Model the coding of each part of the word problem. Use a think-aloud to model the
            steps. When duplicating, start asking students if they can predict what part of
            the algorithm will come next.
        - teacher_role: >
            Ruby:
            Add Sprite (cat +)- Choose a sprite to represent Ruby.
            Events: When clicked
            Looks: Say
        - teacher_role: >
            Ruby’s 3 cats:
            Add sprite: Choose sprite to represent cat
            Events: When Flag Clicked
            Looks: Hide
            Control: Wait 1 second
            Looks: Show
            Motion: Glide to: (Move the cat where you want it positioned. It will show that location in the options.)
        - teacher_role: >
            Right click on the cat AFTER coding it and click DUPLICATE. Move second cat to
            where you want it positioned. Switch out Motion: Glide to and put it in a new location.
        - teacher_role: >
            Circle around 3 cats:
            Add sprite: Choose draw. Use shape to draw a circle. Make no fill inside.
            Events: When flag clicked
            Looks: Hide
            Control: Wait 2 seconds
            Looks: Show
            Motion: Glide to (Do this after you have moved the circle where you want it.)
        - teacher_role: >
            Jane:
            Add sprite- Choose a sprite to represent Jane.
            Events: When flag clicked
            Control: Wait 3 seconds
            Looks: Say “____” for 2 seconds
            Control: Wait 2 seconds
            Looks: Say “_____” for 2 seconds
        - teacher_role: >
            Jane’s Cats:
            Events: When Flag Clicked
            Looks: Hide
            Control: Wait 1 second
            Looks: Show
            Motion: Glide to: (Move the cat where you want it positioned. It will show
            that location in the options.)
        - teacher_role: >
            Right click on cat AFTER coding it and click DUPLICATE. Move the second cat
            to where you want it positioned. Switch out Motion: Glide to and put it in a new location.
            Do this for all the cats
        - teacher_role: >
            Circle around Jane’s groups of 3 cats:
            Events: When flag clicked
            Looks: Hide
            Control: Wait 2 seconds
            Looks: Show
            Motion: Glide to (Do this after you have moved the circle to where you want it positioned.)
        - teacher_role: >
            Right click and duplicate. Move circle to where you want it and
            switch out the Glide to location.
        - teacher_role: >
            Post teacher example in studio so students can go in and see the algorithms
            as they make their own. {rlm}[14](RLM)
      differentiation:
        - "Scratch block-code images allows students to have a hands-on approach before trying out the coding on the computer. "
        - "Students are sitting with partners and can turn and talk - Higher EL can translate for lower EL students"

    - name: Composing Meaning
      rows:
        - teacher_role: >
            Tell students: You are going to use the word problem you solved yesterday as well as the visual you made yesterday
            to start coding your problem with the
            Scratch block-coding images you have in front of you.
          student_role: >
            Students are working together to code their visual of the word problem they solved in lesson 2. They are using
            hands-on visuals and are NOT logged into Scratch yet. {rlm}[15](RLM)
          check_for_understanding: >
            Are students using algorithms correctly to code the characters in their word problems?
        - teacher_role: >
            Make sure you can make an algorithm for each person or object in your word problem.
          check_for_understanding: >
            Do the visuals they are making match their word problems?
        - teacher_role: >
            Think about how your visual differs from mine. Will you need to duplicate more times than I did? How many
            groups will you need? What types of sprites will you use?
          student_role: >
            If students have correctly coded their word problem visual before the allotted time, have them practice
            signing into Scratch, so they are ready for the next lesson.
        - teacher_role: >
            Teacher is circulating the classroom and helping students where they might need it. {rlm}[15](RLM)

      differentiation:
        - "Partner feedback."
        - "Visuals."
        - "Coding posted in classroom and online on Unified Classroom, as well as on Scratch."
        - "Pull small groups of EL students, SPED students OR partners that seem to be struggling with sequencing algorithms together correctly."

    - name: Processing
      rows:
        - teacher_role: >
            Teacher asks follow-up questions for partners to discuss:
          student_role: >
            Students discuss questions with partners and share out.
          check_for_understanding: >
            What was difficult for students that needs to be addressed as they start coding on Scratch in the next lesson?
        - teacher_role: >
            Looking back, did your visual make sense and match your word problem?
          student_role: >
            Allow time for students to fill in any new vocabulary in their Computer Science Vocabulary Graphic Organizer. {rlm}[17](RLM)
          check_for_understanding: >
            Which groups really struggled and might need to be pulled for a small group in the next lesson?

        - teacher_role: >
            What was difficult about this process? {rlm}[16](RLM)
      differentiation:
        - "Sentence starters:"
        - "My visual matched the word problem because…"
        - "Making the algorithm was easy/difficult for us because…"
        - "I struggled with…"
        - "I understood…"

rlms:
  rlm11:
    - >
      Prior to start of the lesson, send students their Scratch login information through... PROGRAM TBD (DOJO/TEAMS?)
  rlm12:
    - >
      In a whole class Zoom session, screen share the visual of the word problem from the previous lesson.
  rlm13:
    - >
      Post the PowerPoint visuals to show the coding of each aspect of the visual on Schoology.
  rlm14:
    - >
      Teacher- Share screen to model representing the word problem visually through an algorithm on Scratch.
    - >
      Students- Follow along with the teacher model representing the word problem visually through paper coding blocks
  rlm15:
    - >
      Utilize breakout rooms to allow pairs of students to work together to code their visual of the word problem they
      solved in lesson 2 (teacher can join different breakout rooms to check-in with students as their way of “circulating”).
  rlm16:
    - >
      In a whole class Zoom session, discuss follow-up questions for partners
  rlm17:
    - >
      Post the Computer Science Vocabulary Graphic Organizer for students to access on your preferred application (Schoology, Teams, etc.).
